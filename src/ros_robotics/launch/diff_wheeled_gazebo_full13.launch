<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="mav_name"  />
   
  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find ros_robotics)/urdf/diff_wheeled_robot_with_sensor.xacro' namespace:=$(arg mav_name)" /> 
 

  <group ns="$(arg mav_name)_1">
    <arg name="namespace" value="$(arg mav_name)_1" />  
    <param name="tf_prefix" value="robot_$(arg mav_name)_tf" />
    <arg name="init_pose" value="-x 3 -y 1 -z 0" />   
    <node name="urdf_spawner_1" pkg="gazebo_ros" type="spawn_model"
     args="$(arg init_pose) -urdf -param /robot_description -model $(arg mav_name) $(arg namespace)"
     respawn="false" output="screen" /> 
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 
  <!-- start robot state publisher -->
    <node pkg="robot_state_publisher" type="state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" /></node>
  </group>
  
</launch>
